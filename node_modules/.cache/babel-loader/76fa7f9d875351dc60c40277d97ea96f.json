{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\college work\\\\ZN-Event\\\\frontend\\\\src\\\\components\\\\authentication_forms\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { RadioBox, Select, TextInput } from \"../inputTypesForm\";\nimport { Button } from 'react-bootstrap';\nimport AuthService from \"../../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneRegExp = /^[+]*[0-9]{8}$/g;\nconst emailRegExp = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      successful: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        roles: [\"user\"]\n      },\n      validationSchema: Yup.object({\n        firstName: Yup.string().max(15, 'Doit contenir 15 caractères ou moins').required('Obligatoire'),\n        lastName: Yup.string().max(20, 'Doit contenir 20 caractères ou moins').required('Obligatoire'),\n        phoneNumber: Yup.string().matches(phoneRegExp).required('Obligatoire'),\n        email: Yup.string().matches(emailRegExp).required('Obligatoire'),\n        password: Yup.string().min(8, 'Doit contenir 8 caractères ou plus').required('Obligatoire'),\n        confirmPassword: Yup.string().when('password', {\n          is: val => val && val.length > 0,\n          then: Yup.string().oneOf([Yup.ref('password')], 'Les deux mots de passe doivent être identiques')\n        })\n      }),\n      onSubmit: values => {\n        AuthService.register(values.firstName, values.lastName, values.phoneNumber, values.email, values.password).then(response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            message: resMessage,\n            successful: false\n          });\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [!this.state.successful && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Pr\\xE9nom\",\n            name: \"firstName\",\n            type: \"text\",\n            placeholder: \"Entrer votre pr\\xE9nom...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Nom\",\n            name: \"lastName\",\n            type: \"text\",\n            placeholder: \"Entrer votre nom...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n            name: \"phoneNumber\",\n            type: \"text\",\n            placeholder: \"Entrer votre num\\xE9ro...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Entrer votre email...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Mot de passe\",\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Entrer votre mot de passe...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Confirmer votre mot de passe\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Confirmer votre mot de passe...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Vous inscrivez \\xE0 notre site pour quelle raison?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RadioBox, {\n            label: \"Job Type\",\n            name: \"roles\",\n            children: \"utiliser notre site pour organiser un \\xE9v\\xE9nement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RadioBox, {\n            label: \"Job Type\",\n            name: \"roles\",\n            onchange: true,\n            children: \"Offrir des services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/college work/ZN-Event/frontend/src/components/authentication_forms/SignUp.js"],"names":["React","Component","Form","Formik","Yup","RadioBox","Select","TextInput","Button","AuthService","phoneRegExp","emailRegExp","SignUp","constructor","props","state","message","successful","render","firstName","lastName","phoneNumber","email","password","confirmPassword","roles","object","string","max","required","matches","min","when","is","val","length","then","oneOf","ref","values","register","response","setState","data","error","resMessage","toString"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Form, Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {RadioBox, Select, TextInput} from \"../inputTypesForm\";\r\nimport  { Button} from 'react-bootstrap';\r\n\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nconst phoneRegExp = /^[+]*[0-9]{8}$/g ;\r\nconst  emailRegExp=/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g ;\r\n\r\n\r\nexport  default class  SignUp extends  Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            message: \"\",\r\n            successful: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={\r\n                    {\r\n                        firstName: '',\r\n                        lastName: '',\r\n                        phoneNumber: '',\r\n                        email: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        roles: [\"user\"]\r\n                    }\r\n                }\r\n                validationSchema={ Yup.object({\r\n                    firstName: Yup.string()\r\n                        .max(15,'Doit contenir 15 caractères ou moins')\r\n                        .required('Obligatoire'),\r\n                    lastName: Yup.string()\r\n                        .max(20,'Doit contenir 20 caractères ou moins')\r\n                        .required('Obligatoire'),\r\n                    phoneNumber: Yup.string()\r\n                        .matches(phoneRegExp)\r\n                        .required('Obligatoire'),\r\n                    email: Yup.string()\r\n                        .matches(emailRegExp)\r\n                        .required('Obligatoire'),\r\n                    password: Yup.string()\r\n                        .min(8,'Doit contenir 8 caractères ou plus')\r\n                        .required('Obligatoire'),\r\n                    confirmPassword: Yup.string().when('password',{\r\n                        is: val=>(val && val.length > 0),\r\n                        then : Yup.string().oneOf(\r\n                            [Yup.ref('password')],\r\n                            'Les deux mots de passe doivent être identiques'\r\n                        )\r\n                    })\r\n                })}\r\n                onSubmit ={ values =>{\r\n                    AuthService.register(\r\n                        values.firstName, values.lastName,values.phoneNumber,values.email,values.password\r\n                    ).then(\r\n                        response => {\r\n                            this.setState({\r\n                                message: response.data.message,\r\n                                successful: true\r\n                            });\r\n                        },\r\n                        error =>{\r\n                            const resMessage=(error.response && error.response.data && error.response.data.message)\r\n                            || error.message || error.toString();\r\n\r\n                            this.setState({\r\n                                message: resMessage,\r\n                                successful: false\r\n                            });\r\n                        }\r\n                    );\r\n                }}\r\n            >\r\n                <Form >\r\n                {!this.state.successful && (\r\n                <div>\r\n                    <TextInput\r\n                        label=\"Prénom\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        placeholder=\"Entrer votre prénom...\"\r\n                    />\r\n\r\n                    <TextInput\r\n                        label=\"Nom\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        placeholder=\"Entrer votre nom...\"\r\n                    />\r\n\r\n                    <TextInput\r\n                        label=\"Numéro de téléphone\"\r\n                        name=\"phoneNumber\"\r\n                        type=\"text\"\r\n                        placeholder=\"Entrer votre numéro...\"\r\n                    />\r\n\r\n                    <TextInput\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Entrer votre email...\"\r\n                    />\r\n\r\n\r\n                    <TextInput\r\n                        label=\"Mot de passe\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Entrer votre mot de passe...\"\r\n                    />\r\n\r\n\r\n                    <TextInput\r\n                        label=\"Confirmer votre mot de passe\"\r\n                        name=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        placeholder=\"Confirmer votre mot de passe...\"\r\n\r\n                    />\r\n\r\n                    <div>\r\n                        Vous inscrivez à notre site pour quelle raison?\r\n                    </div>\r\n                    <RadioBox label=\"Job Type\" name=\"roles\">\r\n                        utiliser notre site pour organiser un événement\r\n                    </RadioBox>\r\n\r\n                    <RadioBox label=\"Job Type\" name=\"roles\" onchange>\r\n                        Offrir des services\r\n                    </RadioBox>\r\n\r\n                    <Button  type=\"submit\">Submit</Button>\r\n                </div>\r\n                        )}\r\n                    {this.state.message && (\r\n                        <div className=\"form-group\">\r\n                            <div\r\n                                className={\r\n                                    this.state.successful\r\n                                        ? \"alert alert-success\"\r\n                                        : \"alert alert-danger\"\r\n                                }\r\n                                role=\"alert\"\r\n                            >\r\n                                {this.state.message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Form>\r\n            </Formik>\r\n\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}