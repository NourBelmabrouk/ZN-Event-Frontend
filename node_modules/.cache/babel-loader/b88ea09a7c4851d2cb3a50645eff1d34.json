{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\college work\\\\ZN-Event\\\\frontend\\\\src\\\\components\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst phoneRegExp = /^[+]*[0-9]{8}$/g;\nconst emailRegExp = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n\nconst textInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: [\" \", label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\" \", meta.error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(textInput, \"q7qPe44xjfrfoQ6W2ZRiruayGDA=\", false, function () {\n  return [useField];\n});\n\nconst SignUp = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      phoneNumber: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Doit contenir 15 caractères ou moins').required('Obligatoire'),\n      lastName: Yup.string().max(20, 'Doit contenir 20 caractères ou moins').required('Obligatoire'),\n      phoneNumber: Yup.string().matches(phoneRegExp).required('Obligatoire'),\n      email: Yup.string().matches(emailRegExp).required('Obligatoire'),\n      password: Yup.string().min(8, 'Doit contenir 8 caractères ou plus').required('Obligatoire'),\n      confirmPassword: Yup.string().when('password', {\n        is: val => val && val.length > 0,\n        then: Yup.string().oneOf([Yup.ref('password')], 'Les deux mots de passe doivent être identiques')\n      })\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textInput\", {\n        label: \"Pr\\xE9nom\",\n        name: \"firstName\",\n        type: \"text\",\n        placeholder: \"Entrer votre pr\\xE9nom...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textInput\", {\n        label: \"Nom\",\n        name: \"lastName\",\n        type: \"text\",\n        placeholder: \"Entrer votre nom...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textInput\", {\n        label: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n        name: \"phoneNumber\",\n        type: \"text\",\n        placeholder: \"Entrer votre num\\xE9ro...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textInput\", {\n        label: \"Pr\\xE9nom\",\n        name: \"firstName\",\n        type: \"text\",\n        placeholder: \"Entrer votre pr\\xE9nom...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textInput\", {\n        label: \"Email\",\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Entrer votre email...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textInput\", {\n        label: \"Mot de passe\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Entrer votre mot de passe...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textInput\", {\n        label: \"Pr\\xE9nom\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        placeholder: \"Confirmer votre mot de passe...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Projects/college work/ZN-Event/frontend/src/components/SignUp.js"],"names":["React","Formik","useField","Yup","phoneRegExp","emailRegExp","textInput","label","props","field","meta","id","name","touched","error","SignUp","firstName","lastName","phoneNumber","email","password","confirmPassword","object","string","max","required","matches","min","when","is","val","length","then","oneOf","ref","values","setSubmitting","setTimeout","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Formik, useField} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst phoneRegExp = /^[+]*[0-9]{8}$/g ;\r\nconst  emailRegExp=/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g ;\r\n\r\nconst textInput=({label, ...props})=>{\r\n    const [field , meta]=useField(props);\r\n    return(\r\n        <>\r\n            <label htmlFor={props.id|| props.name}> {label}</label>\r\n            <input className=\"text-input\" {...field} {... props} />\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\"> {meta.error} </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst SignUp = () => {\r\n    return (\r\n        <Formik\r\n            initialValues={\r\n                {\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    phoneNumber: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                }\r\n            }\r\n            validationSchema={ Yup.object({\r\n                firstName: Yup.string()\r\n                    .max(15,'Doit contenir 15 caractères ou moins')\r\n                    .required('Obligatoire'),\r\n                lastName: Yup.string()\r\n                    .max(20,'Doit contenir 20 caractères ou moins')\r\n                    .required('Obligatoire'),\r\n                phoneNumber: Yup.string()\r\n                    .matches(phoneRegExp)\r\n                    .required('Obligatoire'),\r\n                email: Yup.string()\r\n                    .matches(emailRegExp)\r\n                    .required('Obligatoire'),\r\n                password: Yup.string()\r\n                    .min(8,'Doit contenir 8 caractères ou plus')\r\n                    .required('Obligatoire'),\r\n                confirmPassword: Yup.string().when('password',{\r\n                    is: val=>(val && val.length > 0),\r\n                    then : Yup.string().oneOf(\r\n                        [Yup.ref('password')],\r\n                        'Les deux mots de passe doivent être identiques'\r\n                    )\r\n                })\r\n            })}\r\n            onSubmit={\r\n                (values, { setSubmitting}) =>{\r\n                    setTimeout(()=> {\r\n                        alert(JSON.stringify(values,null,2));\r\n                        setSubmitting(false);\r\n                    },400);\r\n                }}\r\n        >\r\n            <form>\r\n                <textInput\r\n                    label=\"Prénom\"\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre prénom...\"\r\n                />\r\n\r\n                <textInput\r\n                    label=\"Nom\"\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre nom...\"\r\n                />\r\n\r\n                <textInput\r\n                    label=\"Numéro de téléphone\"\r\n                    name=\"phoneNumber\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre numéro...\"\r\n                />\r\n\r\n                <textInput\r\n                    label=\"Prénom\"\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre prénom...\"\r\n                />\r\n\r\n\r\n                <textInput\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre email...\"\r\n                />\r\n\r\n\r\n                <textInput\r\n                    label=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Entrer votre mot de passe...\"\r\n                />\r\n\r\n\r\n                <textInput\r\n                    label=\"Prénom\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirmer votre mot de passe...\"\r\n                />\r\n\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}