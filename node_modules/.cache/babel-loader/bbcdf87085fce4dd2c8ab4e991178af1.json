{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\ZN-Event\\\\ZN-Event-Frontend\\\\src\\\\components\\\\Connexion PopUp\\\\Connexion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = Background;\nconst ConnexionWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n_c2 = ConnexionWrapper;\nconst ConnexionImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px 0 0 10px;\n  background: #000;\n`;\n_c3 = ConnexionImg;\nconst ConnexionContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n_c4 = ConnexionContent;\nconst CloseConnexionButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n_c5 = CloseConnexionButton;\nexport const Connexion = ({\n  showConnexion,\n  setShowConnexion\n}) => {\n  _s();\n\n  const ConnexionRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showConnexion ? 1 : 0,\n    transform: showConnexion ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeConnexion = e => {\n    if (ConnexionRef.current === e.target) {\n      setShowConnexion(false);\n    }\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showConnexion) {\n      setShowConnexion(false);\n      console.log('I pressed');\n    }\n  }, [setShowConnexion, showConnexion]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showConnexion ? /*#__PURE__*/_jsxDEV(Background, {\n      onClick: closeConnexion,\n      ref: ConnexionRef,\n      children: /*#__PURE__*/_jsxDEV(ConnexionWrapper, {\n        showConnexion: showConnexion,\n        children: [/*#__PURE__*/_jsxDEV(ConnexionImg, {\n          src: require('/images/animation.jpg'),\n          alt: \"camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ConnexionContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Are you ready?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Get exclusive access to our next launch.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Join Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CloseConnexionButton, {\n          \"aria-label\": \"Close Connexion\",\n          onClick: () => setShowConnexion(prev => !prev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Connexion, \"+751tq+agV67WbC8zMivM8Xn79I=\", true);\n\n_c6 = Connexion;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Background\");\n$RefreshReg$(_c2, \"ConnexionWrapper\");\n$RefreshReg$(_c3, \"ConnexionImg\");\n$RefreshReg$(_c4, \"ConnexionContent\");\n$RefreshReg$(_c5, \"CloseConnexionButton\");\n$RefreshReg$(_c6, \"Connexion\");","map":{"version":3,"sources":["D:/Projects/React/ZN-Event/ZN-Event-Frontend/src/components/Connexion PopUp/Connexion.js"],"names":["React","useRef","useEffect","useCallback","styled","MdClose","Background","div","ConnexionWrapper","ConnexionImg","img","ConnexionContent","CloseConnexionButton","Connexion","showConnexion","setShowConnexion","ConnexionRef","animation","useSpring","config","duration","opacity","transform","closeConnexion","e","current","target","keyPress","key","console","log","document","addEventListener","removeEventListener","require","prev"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ConnexionWrapper = styled.div`\r\n  width: 800px;\r\n  height: 500px;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  background: #fff;\r\n  color: #000;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  position: relative;\r\n  z-index: 10;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst ConnexionImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 10px 0 0 10px;\r\n  background: #000;\r\n`;\r\n\r\nconst ConnexionContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1.8;\r\n  color: #141414;\r\n\r\n  p {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  button {\r\n    padding: 10px 24px;\r\n    background: #141414;\r\n    color: #fff;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst CloseConnexionButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nexport const Connexion = ({ showConnexion, setShowConnexion }) => {\r\n  const ConnexionRef = useRef();\r\n\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250\r\n    },\r\n    opacity: showConnexion ? 1 : 0,\r\n    transform: showConnexion ? `translateY(0%)` : `translateY(-100%)`\r\n  });\r\n\r\n  const closeConnexion = e => {\r\n    if (ConnexionRef.current === e.target) {\r\n      setShowConnexion(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showConnexion) {\r\n        setShowConnexion(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowConnexion, showConnexion]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {showConnexion ? (\r\n        <Background onClick={closeConnexion} ref={ConnexionRef}>\r\n\r\n            <ConnexionWrapper showConnexion={showConnexion}>\r\n              <ConnexionImg src={require('/images/animation.jpg')} alt='camera' />\r\n              <ConnexionContent>\r\n                <h1>Are you ready?</h1>\r\n                <p>Get exclusive access to our next launch.</p>\r\n                <button>Join Now</button>\r\n              </ConnexionContent>\r\n              <CloseConnexionButton\r\n                aria-label='Close Connexion'\r\n                onClick={() => setShowConnexion(prev => !prev)}\r\n              />\r\n            </ConnexionWrapper>\r\n\r\n        </Background>\r\n      ) : null}\r\n    </>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}