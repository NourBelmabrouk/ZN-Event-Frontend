{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\college work\\\\ZN-Event\\\\frontend\\\\src\\\\components\\\\SignUp.js\";\nimport React from 'react';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextInput } from \"./inputTypesForm\";\nimport { Form as form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneRegExp = /^[+]*[0-9]{8}$/g;\nconst emailRegExp = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n\nconst SignUp = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: Yup.object({\n        firstName: Yup.string().max(15, 'Doit contenir 15 caractères ou moins').required('Obligatoire'),\n        lastName: Yup.string().max(20, 'Doit contenir 20 caractères ou moins').required('Obligatoire'),\n        phoneNumber: Yup.string().matches(phoneRegExp).required('Obligatoire'),\n        email: Yup.string().matches(emailRegExp).required('Obligatoire'),\n        password: Yup.string().min(8, 'Doit contenir 8 caractères ou plus').required('Obligatoire'),\n        confirmPassword: Yup.string().when('password', {\n          is: val => val && val.length > 0,\n          then: Yup.string().oneOf([Yup.ref('password')], 'Les deux mots de passe doivent être identiques')\n        })\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Pr\\xE9nom\",\n            name: \"firstName\",\n            type: \"text\",\n            placeholder: \"Entrer votre pr\\xE9nom...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Nom\",\n            name: \"lastName\",\n            type: \"text\",\n            placeholder: \"Entrer votre nom...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n            name: \"phoneNumber\",\n            type: \"text\",\n            placeholder: \"Entrer votre num\\xE9ro...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Entrer votre email...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Mot de passe\",\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Entrer votre mot de passe...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Confirmer votre mot de passe\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Confirmer votre mot de passe...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(form.Control, {\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(form.Group, {\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(form.Check, {\n          type: \"checkbox\",\n          label: \"Check me out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Projects/college work/ZN-Event/frontend/src/components/SignUp.js"],"names":["React","Form","Formik","Yup","TextInput","form","Button","phoneRegExp","emailRegExp","SignUp","firstName","lastName","phoneNumber","email","password","confirmPassword","object","string","max","required","matches","min","when","is","val","length","then","oneOf","ref","values","setSubmitting","setTimeout","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form, Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport  {TextInput} from \"./inputTypesForm\";\r\nimport  {Form as form , Button} from 'react-bootstrap';\r\n\r\nconst phoneRegExp = /^[+]*[0-9]{8}$/g ;\r\nconst  emailRegExp=/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g ;\r\n\r\n\r\n\r\n\r\nconst SignUp = () => {\r\n    return (\r\n        <div>\r\n        <Formik\r\n            initialValues={\r\n                {\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    phoneNumber: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                }\r\n            }\r\n            validationSchema={ Yup.object({\r\n                firstName: Yup.string()\r\n                    .max(15,'Doit contenir 15 caractères ou moins')\r\n                    .required('Obligatoire'),\r\n                lastName: Yup.string()\r\n                    .max(20,'Doit contenir 20 caractères ou moins')\r\n                    .required('Obligatoire'),\r\n                phoneNumber: Yup.string()\r\n                    .matches(phoneRegExp)\r\n                    .required('Obligatoire'),\r\n                email: Yup.string()\r\n                    .matches(emailRegExp)\r\n                    .required('Obligatoire'),\r\n                password: Yup.string()\r\n                    .min(8,'Doit contenir 8 caractères ou plus')\r\n                    .required('Obligatoire'),\r\n                confirmPassword: Yup.string().when('password',{\r\n                    is: val=>(val && val.length > 0),\r\n                    then : Yup.string().oneOf(\r\n                        [Yup.ref('password')],\r\n                        'Les deux mots de passe doivent être identiques'\r\n                    )\r\n                })\r\n            })}\r\n            onSubmit={\r\n                (values, { setSubmitting}) =>{\r\n                    setTimeout(()=> {\r\n                        alert(JSON.stringify(values,null,2));\r\n                        setSubmitting(false);\r\n                    },400);\r\n                }}\r\n        >\r\n            <Form>\r\n                <form>\r\n                <TextInput\r\n                    label=\"Prénom\"\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre prénom...\"\r\n                />\r\n\r\n                <TextInput\r\n                    label=\"Nom\"\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre nom...\"\r\n                />\r\n\r\n                <TextInput\r\n                    label=\"Numéro de téléphone\"\r\n                    name=\"phoneNumber\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre numéro...\"\r\n                />\r\n\r\n                <TextInput\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer votre email...\"\r\n                />\r\n\r\n\r\n                <TextInput\r\n                    label=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Entrer votre mot de passe...\"\r\n                />\r\n\r\n\r\n                <TextInput\r\n                    label=\"Confirmer votre mot de passe\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirmer votre mot de passe...\"\r\n                />\r\n\r\n                <button variant=\"primary\" type=\"submit\">Submit</button>\r\n                </form>\r\n            </Form>\r\n        </Formik>\r\n            <form>\r\n                <form.Group controlId=\"formBasicEmail\">\r\n                    <form.Label>Email address</form.Label>\r\n                    <form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                    <form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                    </form.Text>\r\n                </form.Group>\r\n\r\n                <form.Group controlId=\"formBasicPassword\">\r\n                    <form.Label>Password</form.Label>\r\n                    <form.Control type=\"password\" placeholder=\"Password\" />\r\n                </form.Group>\r\n                <form.Group controlId=\"formBasicCheckbox\">\r\n                    <form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}